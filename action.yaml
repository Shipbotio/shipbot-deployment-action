name: 'Shipbot.io Deployment Tracker'
author: 'Shipbot.io'
description: 'Easily track deployments in Shipbot.io using Github Actions.'
branding:
  icon: 'upload-cloud'
  color: 'blue'
categories:
  - Deployment
  - Continuous integration
inputs:
  apiKey:
    description: 'Your Shipbot.io API Key.'
    required: true
  artifactConfig:
    description: 'Path to service configuration JSON file containing artifactId'
    required: true
  commitSha:
    description: 'Commit for the deployment.'
    required: false
  user:
    description: 'The user initiating the deployment. Will be linked to Slack users within Shipbot.io once the user has logged into Shipbot.io and connected with Github.'
    required: false
  branch:
    description: 'The branch that is being deployed.'
    required: false
  version:
    description: 'The version can be any string.'
    required: false
  environment:
    description: 'This should match the environment created in Current Version. By default PRODUCTION is created.'
    required: false
  status:
    description: 'Current status of deployment, should be one of STARTED, SUCCEEDED, FAILED.'
    required: false
    default: SUCCEEDED
  changelog:
    description: 'This can be a URL to a change log or the changelog notes itself. It can be ommitted and auto-generated by Shipbot.io.'
    required: false
  description:
    description: 'This can be further information on the deployment that would not be considered part of the changelog.'
    required: false
  link:
    description: 'This should link to an external place where more action on the deployment can take place for example it could be the deployment job in your CI/CD pipeline.'
    required: false
  type:
    description: 'This is a enum describing the deployment strategy. The only option right now is STANDARD.'
    required: false
    default: STANDARD
  logLevel:
    description: 'Log level (DEBUG, INFO, WARNING, ERROR)'
    required: false
    default: 'INFO'
  apiHost:
    description: 'Shipbot API Host'
    required: false
    default: 'https://api.shipbot.io'
  failureMode:
    description: 'How to handle errors (HARD or SOFT). HARD will fail the GitHub action, SOFT will only log errors.'
    required: false
    default: 'HARD'
  deploymentId:
    description: 'Optional: ID of an existing deployment to update its status'
    required: false
outputs:
  deploymentId:
    description: 'Shipbot deployment ID for status updates'
runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    SHIPBOT_API_HOST: ${{ inputs.apiHost }}
    SHIPBOT_API_KEY: ${{ inputs.apiKey }}
    SHIPBOT_ARTIFACT_CONFIG: ${{ inputs.artifactConfig }}
    SHIPBOT_DEPLOYMENT_ID: ${{ inputs.deploymentId }}
    SHIPBOT_BRANCH: ${{ inputs.branch }}
    SHIPBOT_COMMIT_SHA: ${{ inputs.commitSha }}
    SHIPBOT_VERSION: ${{ inputs.version }}
    SHIPBOT_ENVIRONMENT: ${{ inputs.environment }}
    SHIPBOT_STATUS: ${{ inputs.status }}
    SHIPBOT_CHANGE_LOG: ${{ inputs.changelog }}
    SHIPBOT_DESCRIPTION: ${{ inputs.description }}
    SHIPBOT_LINK: ${{ inputs.link }}
    SHIPBOT_TYPE: ${{ inputs.type }}
    SHIPBOT_USER: ${{ inputs.user }}
    SHIPBOT_LOG_LEVEL: ${{ inputs.logLevel }}
    SHIPBOT_FAILURE_MODE: ${{ inputs.failureMode }}
    SHIPBOT_SERVICE_CONFIG: ${{ inputs.artifactConfig }}
